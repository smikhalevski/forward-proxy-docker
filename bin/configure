#!/bin/sh

mkdir -p /foxhole/letsencrypt

echo
if [[ "$(read -p '1/3 Enable HTTPS (requires a registered domain name)? [y/n] ' YES && echo $YES)" == [yY] ]]; then
    read -p '    Domain name: ' DOMAIN_NAME

    if [ "$DOMAIN_NAME" ]; then

        CERT_DIR="/etc/letsencrypt/live/$DOMAIN_NAME"

        if [ -d "$CERT_DIR" ] && [[ "$(read -p '    Certificates already exist. Overwrite? [y/n] ' YES && echo $YES)" == [yY] ]]; then
            echo 'DELETE CERTS'
#            rm -rf "$CERT_DIR"
        fi

        if ! [ -d "$CERT_DIR" ]; then
            echo
            echo 'Obtaining a certificate...'

#            echo
#            echo "server { listen 80; }" > /etc/nginx/conf.d/default.conf
#
#            echo
#            certbot certonly \
#                --nginx \
#                --non-interactive \
#                --agree-tos \
#                --no-eff-email \
#                --no-redirect \
#                --email "admin@$DOMAIN_NAME" \
#                --cert-name "$DOMAIN_NAME" \
#                --domain "$DOMAIN_NAME"
        fi

        ln -snf "$CERT_DIR" /etc/letsencrypt/live/foxhole

        cp -f /etc/nginx/foxhole.conf /etc/nginx/conf.d/default.conf

        [ -f /var/run/nginx.pid ] && nginx -s reload
    else
        echo
        echo 'HTTPS configuration aborted'
    fi
else
    rm -f /etc/letsencrypt/live/foxhole
fi

PROXY_PID_FILE=/tmp/tinyproxy.pid
PROXY_BASIC_AUTH=''
PROXY_ALLOW=''

if [ -L /etc/letsencrypt/live/foxhole ]; then
    DOMAIN_NAME="$(basename "$(readlink -f /etc/letsencrypt/live/foxhole)")"
    PROXY_LISTEN=127.0.0.1
    PROXY_PORT=8080
    PUBLIC_PORT=443
else
    PROXY_LISTEN=0.0.0.0
    PROXY_PORT=80
    PUBLIC_PORT=80
fi

echo
if [[ "$(read -p '2/3 Configure users? [y/n] ' YES && echo $YES)" == [yY] ]]; then
    while true; do
        read -p '    Username: ' USERNAME

        [ "$USERNAME" ] && read -p '    Password: ' PASSWORD

        [ -z "$PASSWORD" ] && break

        PROXY_BASIC_AUTH=$(echo -e "${PROXY_BASIC_AUTH}\nBasicAuth ${USERNAME} ${PASSWORD}")

        echo
        ! [[ "$(read -p '    Add another user? [y/n] ' YES && echo $YES)" == [yY] ]] && break
    done
fi

echo
if [[ "$(read -p '3/3 Enable IP whitelist? [y/n] ' YES && echo $YES)" == [yY] ]]; then
    while true; do
        read -p '    Enter an IP address: ' IP

        [ -z "$IP" ] && break

        PROXY_ALLOW=$(echo -e "${PROXY_ALLOW}\nAllow ${IP}")

        echo
        ! [[ "$(read -p '    Add another IP? [y/n] ' YES && echo $YES)" == [yY] ]] && break
    done
fi

mkdir -p /etc/tinyproxy

cat >/etc/tinyproxy/tinyproxy.conf <<EOF
User nobody
Group nogroup
PidFile "${PROXY_PID_FILE}"
Listen ${PROXY_LISTEN}
Port ${PROXY_PORT}
Timeout 600
MaxClients 256
DisableViaHeader Yes
LogLevel Info
${PROXY_BASIC_AUTH}
${PROXY_ALLOW}
EOF

echo
echo 'Starting server...'

echo
cat /etc/tinyproxy/tinyproxy.conf

while [ ! -f "$PROXY_PID_FILE" ]; do
    sleep 2
done

if [ "$DOMAIN_NAME" ]; then
    PUBLIC_ADDR="$DOMAIN_NAME"
else
    PUBLIC_ADDR=$(wget -qO- http://myip.enix.org/REMOTE_ADDR)
fi

echo
echo -e "Server started successfully: \033[0;32m${PUBLIC_ADDR}:${PUBLIC_PORT}\033[0m"
